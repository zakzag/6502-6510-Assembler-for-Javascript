/**
 * Possible statements, opcodes, addressing modes etc.
 *
 * A single line consists:
 * [[label[:]] [(opcode|directive|assignment) [arguments]]] [; comment]
 *
 * LIST OF DIRECTIVES
 *
 * * = <address>
 *     sets the program counter to <address>
 * .byte <expr>[,<expr>[,<expr>]]
 *     list of bytes
 * .word <expr>[,<expr>[,<expr>]]
 *	   list of words
 * .str "<string>"
 *     string
 * .require "<filename>"
 *     loads a file as a source file and parses it.
 * .resource "<filename>"
 *     loads a file as a resource (ie. image, font etc.).
 * .end
 *     marks the end of the source.
 *
 * PROCESSOR REGISTERS
 *
 * A - accumulator, general purpose register
 * X - Index register, used for the following addressing modes:
 *     - zero page, x
 *     - absolute, x
 *     - indexed indirect
 * Y - Index regsiter, used for the following addressing modes:
 *     - zero page, y
 *     - absolute, y
 *     - indirect indexed
 *
 * ADDRESSING MODES
 *
 *  Implicit(IMP)            RTS
 *  Accumulator(IMP)         ROR A
 *  Immediate(IMM)           LDA #$ff
 *  Zero Page(ZP)            STA $12
 *  Zero Page,X(ZPX)         CMP $fd,x
 *  Zero Page,Y(ZPY)         ADC $d0,y
 *  Relative(REL)            BNE loop1:
 *  Absolute(ABS)            JMP $1234
 *  Absolute,x(ABSX)         ADD $1000,x
 *  Absolute,Y(ABSY)         SBC $1000,y
 *  Indirect(IND)            JMP($ffe0)
 *  Indexed Indirect(INDX)   LDA ($40,x)
 *  Indirect Indexed(INDY)   STA ($40),y
 *
 *  EXPRESSION
 *  - label (translated as memory addresses)    loop1 -> $12ee
 *  - scalar number:  decimal: 100, hex: $44, binary: %11111100
 *  - operators: + - 
 *  - hi/lo byte: < , >
 *
 */
module.exports = (function() {
	return {
		Opcode: {
		/* Name: { IMM,  ZP,   ZPX,  ZPY,  ABS,  ABSX, ABSY, INDX, INDY, IMP,  REL   IND   */
			ADC: [ 0x69, 0x65, 0x75, 0x00, 0x6d, 0x7d, 0x79, 0x61, 0x71, 0x00, 0x00, 0x00  ],
			AND: [ 0x29, 0x25, 0x35, 0x00, 0x2d, 0x3d, 0x39, 0x21, 0x31, 0x00, 0x00, 0x00  ],
			ASL: [ 0x00, 0x06, 0x16, 0x00, 0x0e, 0x1e, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00  ],
			BIT: [ 0x00, 0x24, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ],
			BPL: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00  ],
			BMI: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00  ],
			BVC: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00  ],
			BVS: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00  ],
			BCC: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00  ],
			BCS: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x00  ],
			BNE: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x00  ],
			BEQ: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00  ],
			CMP: [ 0xc9, 0xc5, 0xd5, 0x00, 0xcd, 0xdd, 0xd9, 0xc1, 0xd1, 0x00, 0x00, 0x00  ],
			CPX: [ 0xe0, 0xe4, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ],
			CPY: [ 0xc0, 0xc4, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ],
			DEC: [ 0x00, 0xc6, 0xd6, 0x00, 0xce, 0xde, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ],
			EOR: [ 0x49, 0x45, 0x55, 0x00, 0x4d, 0x5d, 0x59, 0x41, 0x51, 0x00, 0x00, 0x00  ],
			CLC: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00  ],
			SEC: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00  ],
			CLI: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00  ],
			SEI: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00  ],
			CLV: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00  ],
			CLD: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00  ],
			SED: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00  ],
			INC: [ 0x00, 0xe6, 0xf6, 0x00, 0xee, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ],
			JMP: [ 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6c  ],
			JSR: [ 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ],
			LDA: [ 0xa9, 0xa5, 0xb5, 0x00, 0xad, 0xbd, 0xb9, 0xa1, 0xb1, 0x00, 0x00, 0x00  ],
			LDX: [ 0xa2, 0xa6, 0x00, 0xb6, 0xae, 0x00, 0xbe, 0x00, 0x00, 0x00, 0x00, 0x00  ],
			LDY: [ 0xa0, 0xa4, 0xb4, 0x00, 0xac, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ],
			LSR: [ 0x00, 0x46, 0x56, 0x00, 0x4e, 0x5e, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00  ],
			NOP: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xea, 0x00, 0x00  ],
			ORA: [ 0x09, 0x05, 0x15, 0x00, 0x0d, 0x1d, 0x19, 0x01, 0x11, 0x00, 0x00, 0x00  ],
			TAX: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00  ],
			TXA: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00  ],
			DEX: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00  ],
			INX: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00  ],
			TAY: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00  ],
			TYA: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00  ],
			DEY: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00  ],
			INY: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00  ],
			ROR: [ 0x00, 0x66, 0x76, 0x00, 0x6e, 0x7e, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00  ],
			ROL: [ 0x00, 0x26, 0x36, 0x00, 0x2e, 0x3e, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00  ],
			RTI: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00  ],
			RTS: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00  ],
			SBC: [ 0xe9, 0xe5, 0xf5, 0x00, 0xed, 0xfd, 0xf9, 0xe1, 0xf1, 0x00, 0x00, 0x00  ],
			STA: [ 0x00, 0x85, 0x95, 0x00, 0x8d, 0x9d, 0x99, 0x81, 0x91, 0x00, 0x00, 0x00  ],
			STX: [ 0x00, 0x86, 0x00, 0x96, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ],
			STY: [ 0x00, 0x84, 0x94, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  ],
			TXS: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00  ],
			TSX: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00  ],
			PHA: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00  ],
			PLA: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00  ],
			PHP: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00  ],
			PLP: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00  ]
		},

		AddressingMode: {
			IMM: {
				shortName: "IMM",
				name: "Immediate",
				length: 1,
				index: 0
			},
			ZP: {
				shortName: "ZP",
				name: "Zero page",
				length: 2,
				index: 1
			},
			ZPX: {
				shortName: "ZPX",
				name: "Zero page, x",
				length: 2,
				index: 2
			},
			ZPY: {
				shortName: "ZPY",
				name: "Zero page, y",
				length: 2,
				index: 3
			},
			ABS: {
				shortName: "ABS",
				name: "Absolute",
				length: 3,
				index: 4
			},
			ABSX: {
				shortName: "ABSX",
				name: "Absolute, x",
				length: 2,
				index: 5
			},
			ABSY: {
				shortName: "ABSY",
				name: "Absolute, y",
				length: 2,
				index: 6
			},
			INDX: {
				shortName: "INDX",
				name: "Indexed Indirect, x",
				length: 2,
				index: 7
			},
			INDY: {
				shortName: "INDY",
				name: "Indirect Indexed, y",
				length: 2,
				index: 8
			},
			IMP: {
				shortName: "IMP",
				name: "Implicit",
				length: 1,
				index: 9
			},
			REL: {
				shortName: "REL",
				name: "Relative",
				length: 2,
				index: 10
			},
			IND: {
				shortName: "IND",
				name: "Indirect",
				length: 3,
				index: 11
			}
		}
	};
})();